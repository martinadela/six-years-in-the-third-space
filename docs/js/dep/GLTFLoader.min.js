console.warn("THREE.GLTFLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation."),THREE.GLTFLoader=function(){function a(a){THREE.Loader.call(this,a),this.dracoLoader=null,this.ddsLoader=null,this.ktx2Loader=null,this.pluginCallbacks=[],this.register(function(a){return new f(a)}),this.register(function(a){return new h(a)}),this.register(function(a){return new g(a)}),this.register(function(a){return new d(a)})}function b(){var a={};return{get:function(b){return a[b]},add:function(b,c){a[b]=c},remove:function(b){delete a[b]},removeAll:function(){a={}}}}function c(a){if(!a)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");this.name=B.MSFT_TEXTURE_DDS,this.ddsLoader=a}function d(a){this.parser=a,this.name=B.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}function e(){this.name=B.KHR_MATERIALS_UNLIT}function f(a){this.parser=a,this.name=B.KHR_MATERIALS_CLEARCOAT}function g(a){this.parser=a,this.name=B.KHR_MATERIALS_TRANSMISSION}function h(a){this.parser=a,this.name=B.KHR_TEXTURE_BASISU}function i(a){this.name=B.KHR_BINARY_GLTF,this.content=null,this.body=null;var b=new DataView(a,0,D);if(this.header={magic:THREE.LoaderUtils.decodeText(new Uint8Array(a.slice(0,4))),version:b.getUint32(4,!0),length:b.getUint32(8,!0)},this.header.magic!==C)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");for(var c=new DataView(a,D),d=0;d<c.byteLength;){var e=c.getUint32(d,!0);d+=4;var f=c.getUint32(d,!0);if(d+=4,f===E.JSON){var g=new Uint8Array(a,D+d,e);this.content=THREE.LoaderUtils.decodeText(g)}else if(f===E.BIN){var h=D+d;this.body=a.slice(h,h+e)}d+=e}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}function j(a,b){if(!b)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=B.KHR_DRACO_MESH_COMPRESSION,this.json=a,this.dracoLoader=b,this.dracoLoader.preload()}function k(){this.name=B.KHR_TEXTURE_TRANSFORM}function l(a){THREE.MeshStandardMaterial.call(this),this.isGLTFSpecularGlossinessMaterial=!0;var b=["#ifdef USE_SPECULARMAP","	uniform sampler2D specularMap;","#endif"].join("\n"),c=["#ifdef USE_GLOSSINESSMAP","	uniform sampler2D glossinessMap;","#endif"].join("\n"),d=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","	vec4 texelSpecular = texture2D( specularMap, vUv );","	texelSpecular = sRGBToLinear( texelSpecular );","	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","	specularFactor *= texelSpecular.rgb;","#endif"].join("\n"),e=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","	vec4 texelGlossiness = texture2D( glossinessMap, vUv );","	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","	glossinessFactor *= texelGlossiness.a;","#endif"].join("\n"),f=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb * ( 1. - max( specularFactor.r, max( specularFactor.g, specularFactor.b ) ) );","vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );","material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.","material.specularRoughness += geometryRoughness;","material.specularRoughness = min( material.specularRoughness, 1.0 );","material.specularColor = specularFactor;"].join("\n"),g={specular:{value:(new THREE.Color).setHex(16777215)},glossiness:{value:1},specularMap:{value:null},glossinessMap:{value:null}};this._extraUniforms=g,this.onBeforeCompile=function(a){for(var h in g)a.uniforms[h]=g[h];a.fragmentShader=a.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;").replace("uniform float metalness;","uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>",b).replace("#include <metalnessmap_pars_fragment>",c).replace("#include <roughnessmap_fragment>",d).replace("#include <metalnessmap_fragment>",e).replace("#include <lights_physical_fragment>",f)},Object.defineProperties(this,{specular:{get:function(){return g.specular.value},set:function(a){g.specular.value=a}},specularMap:{get:function(){return g.specularMap.value},set:function(a){g.specularMap.value=a,a?this.defines.USE_SPECULARMAP="":delete this.defines.USE_SPECULARMAP}},glossiness:{get:function(){return g.glossiness.value},set:function(a){g.glossiness.value=a}},glossinessMap:{get:function(){return g.glossinessMap.value},set:function(a){g.glossinessMap.value=a,a?(this.defines.USE_GLOSSINESSMAP="",this.defines.USE_UV=""):(delete this.defines.USE_GLOSSINESSMAP,delete this.defines.USE_UV)}}}),delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this.setValues(a)}function m(){return{name:B.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return l},extendParams:function(a,b,c){var d=b.extensions[this.name];a.color=new THREE.Color(1,1,1),a.opacity=1;var e=[];if(Array.isArray(d.diffuseFactor)){var f=d.diffuseFactor;a.color.fromArray(f),a.opacity=f[3]}if(void 0!==d.diffuseTexture&&e.push(c.assignTexture(a,"map",d.diffuseTexture)),a.emissive=new THREE.Color(0,0,0),a.glossiness=void 0!==d.glossinessFactor?d.glossinessFactor:1,a.specular=new THREE.Color(1,1,1),Array.isArray(d.specularFactor)&&a.specular.fromArray(d.specularFactor),void 0!==d.specularGlossinessTexture){var g=d.specularGlossinessTexture;e.push(c.assignTexture(a,"glossinessMap",g)),e.push(c.assignTexture(a,"specularMap",g))}return Promise.all(e)},createMaterial:function(a){var b=new l(a);return b.fog=!0,b.color=a.color,b.map=void 0===a.map?null:a.map,b.lightMap=null,b.lightMapIntensity=1,b.aoMap=void 0===a.aoMap?null:a.aoMap,b.aoMapIntensity=1,b.emissive=a.emissive,b.emissiveIntensity=1,b.emissiveMap=void 0===a.emissiveMap?null:a.emissiveMap,b.bumpMap=void 0===a.bumpMap?null:a.bumpMap,b.bumpScale=1,b.normalMap=void 0===a.normalMap?null:a.normalMap,b.normalMapType=THREE.TangentSpaceNormalMap,a.normalScale&&(b.normalScale=a.normalScale),b.displacementMap=null,b.displacementScale=1,b.displacementBias=0,b.specularMap=void 0===a.specularMap?null:a.specularMap,b.specular=a.specular,b.glossinessMap=void 0===a.glossinessMap?null:a.glossinessMap,b.glossiness=a.glossiness,b.alphaMap=null,b.envMap=void 0===a.envMap?null:a.envMap,b.envMapIntensity=1,b.refractionRatio=.98,b}}}function n(){this.name=B.KHR_MESH_QUANTIZATION}function o(a,b,c,d){THREE.Interpolant.call(this,a,b,c,d)}function p(a,b){return"string"!=typeof a||""===a?"":(/^https?:\/\//i.test(b)&&/^\//.test(a)&&(b=b.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(a)?a:/^data:.*,.*$/i.test(a)?a:/^blob:.*$/i.test(a)?a:b+a)}function q(a){return void 0===a.DefaultMaterial&&(a.DefaultMaterial=new THREE.MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:THREE.FrontSide})),a.DefaultMaterial}function r(a,b,c){for(var d in c.extensions)void 0===a[d]&&(b.userData.gltfExtensions=b.userData.gltfExtensions||{},b.userData.gltfExtensions[d]=c.extensions[d])}function s(a,b){void 0!==b.extras&&("object"==typeof b.extras?Object.assign(a.userData,b.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+b.extras))}function t(a,b,c){for(var d=!1,e=!1,f=0,g=b.length;g>f;f++){var h=b[f];if(void 0!==h.POSITION&&(d=!0),void 0!==h.NORMAL&&(e=!0),d&&e)break}if(!d&&!e)return Promise.resolve(a);for(var i=[],j=[],f=0,g=b.length;g>f;f++){var h=b[f];if(d){var k=void 0!==h.POSITION?c.getDependency("accessor",h.POSITION):a.attributes.position;i.push(k)}if(e){var k=void 0!==h.NORMAL?c.getDependency("accessor",h.NORMAL):a.attributes.normal;j.push(k)}}return Promise.all([Promise.all(i),Promise.all(j)]).then(function(b){var c=b[0],f=b[1];return d&&(a.morphAttributes.position=c),e&&(a.morphAttributes.normal=f),a.morphTargetsRelative=!0,a})}function u(a,b){if(a.updateMorphTargets(),void 0!==b.weights)for(var c=0,d=b.weights.length;d>c;c++)a.morphTargetInfluences[c]=b.weights[c];if(b.extras&&Array.isArray(b.extras.targetNames)){var e=b.extras.targetNames;if(a.morphTargetInfluences.length===e.length){a.morphTargetDictionary={};for(var c=0,d=e.length;d>c;c++)a.morphTargetDictionary[e[c]]=c}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function v(a){var b,c=a.extensions&&a.extensions[B.KHR_DRACO_MESH_COMPRESSION];return b=c?"draco:"+c.bufferView+":"+c.indices+":"+w(c.attributes):a.indices+":"+w(a.attributes)+":"+a.mode}function w(a){for(var b="",c=Object.keys(a).sort(),d=0,e=c.length;e>d;d++)b+=c[d]+":"+a[c[d]]+";";return b}function x(a,c){this.json=a||{},this.extensions={},this.plugins={},this.options=c||{},this.cache=new b,this.associations=new Map,this.primitiveCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.nodeNamesUsed={},"undefined"!=typeof createImageBitmap&&/Firefox/.test(navigator.userAgent)===!1?this.textureLoader=new THREE.ImageBitmapLoader(this.options.manager):this.textureLoader=new THREE.TextureLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new THREE.FileLoader(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}function y(a,b,c){var d=b.attributes,e=new THREE.Box3;if(void 0!==d.POSITION){var f=c.json.accessors[d.POSITION],g=f.min,h=f.max;if(void 0===g||void 0===h)return void console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");e.set(new THREE.Vector3(g[0],g[1],g[2]),new THREE.Vector3(h[0],h[1],h[2]));var i=b.targets;if(void 0!==i){for(var j=new THREE.Vector3,k=new THREE.Vector3,l=0,m=i.length;m>l;l++){var n=i[l];if(void 0!==n.POSITION){var f=c.json.accessors[n.POSITION],g=f.min,h=f.max;void 0!==g&&void 0!==h?(k.setX(Math.max(Math.abs(g[0]),Math.abs(h[0]))),k.setY(Math.max(Math.abs(g[1]),Math.abs(h[1]))),k.setZ(Math.max(Math.abs(g[2]),Math.abs(h[2]))),j.max(k)):console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}e.expandByVector(j)}a.boundingBox=e;var o=new THREE.Sphere;e.getCenter(o.center),o.radius=e.min.distanceTo(e.max)/2,a.boundingSphere=o}}function z(a,b,c){function d(b,d){return c.getDependency("accessor",b).then(function(b){a.setAttribute(d,b)})}var e=b.attributes,f=[];for(var g in e){var h=K[g]||g.toLowerCase();h in a.attributes||f.push(d(e[g],h))}if(void 0!==b.indices&&!a.index){var i=c.getDependency("accessor",b.indices).then(function(b){a.setIndex(b)});f.push(i)}return s(a,b),y(a,b,c),Promise.all(f).then(function(){return void 0!==b.targets?t(a,b.targets,c):a})}function A(a,b){var c=a.getIndex();if(null===c){var d=[],e=a.getAttribute("position");if(void 0===e)return console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),a;for(var f=0;f<e.count;f++)d.push(f);a.setIndex(d),c=a.getIndex()}var g=c.count-2,h=[];if(b===THREE.TriangleFanDrawMode)for(var f=1;g>=f;f++)h.push(c.getX(0)),h.push(c.getX(f)),h.push(c.getX(f+1));else for(var f=0;g>f;f++)f%2===0?(h.push(c.getX(f)),h.push(c.getX(f+1)),h.push(c.getX(f+2))):(h.push(c.getX(f+2)),h.push(c.getX(f+1)),h.push(c.getX(f)));h.length/3!==g&&console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");var i=a.clone();return i.setIndex(h),i}a.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:a,load:function(a,b,c,d){var e,f=this;e=""!==this.resourcePath?this.resourcePath:""!==this.path?this.path:THREE.LoaderUtils.extractUrlBase(a),this.manager.itemStart(a);var g=function(b){d?d(b):console.error(b),f.manager.itemError(a),f.manager.itemEnd(a)},h=new THREE.FileLoader(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(this.withCredentials),h.load(a,function(c){try{f.parse(c,e,function(c){b(c),f.manager.itemEnd(a)},g)}catch(d){g(d)}},c,g)},setDRACOLoader:function(a){return this.dracoLoader=a,this},setDDSLoader:function(a){return this.ddsLoader=a,this},setKTX2Loader:function(a){return this.ktx2Loader=a,this},register:function(a){return-1===this.pluginCallbacks.indexOf(a)&&this.pluginCallbacks.push(a),this},unregister:function(a){return-1!==this.pluginCallbacks.indexOf(a)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(a),1),this},parse:function(a,b,d,f){var g,h={},l={};if("string"==typeof a)g=a;else{var o=THREE.LoaderUtils.decodeText(new Uint8Array(a,0,4));if(o===C){try{h[B.KHR_BINARY_GLTF]=new i(a)}catch(p){return void(f&&f(p))}g=h[B.KHR_BINARY_GLTF].content}else g=THREE.LoaderUtils.decodeText(new Uint8Array(a))}var q=JSON.parse(g);if(void 0===q.asset||q.asset.version[0]<2)return void(f&&f(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.")));var r=new x(q,{path:b||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager,ktx2Loader:this.ktx2Loader});r.fileLoader.setRequestHeader(this.requestHeader);for(var s=0;s<this.pluginCallbacks.length;s++){var t=this.pluginCallbacks[s](r);l[t.name]=t,h[t.name]=!0}if(q.extensionsUsed)for(var s=0;s<q.extensionsUsed.length;++s){var u=q.extensionsUsed[s],v=q.extensionsRequired||[];switch(u){case B.KHR_MATERIALS_UNLIT:h[u]=new e;break;case B.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:h[u]=new m;break;case B.KHR_DRACO_MESH_COMPRESSION:h[u]=new j(q,this.dracoLoader);break;case B.MSFT_TEXTURE_DDS:h[u]=new c(this.ddsLoader);break;case B.KHR_TEXTURE_TRANSFORM:h[u]=new k;break;case B.KHR_MESH_QUANTIZATION:h[u]=new n;break;default:v.indexOf(u)>=0&&void 0===l[u]&&console.warn('THREE.GLTFLoader: Unknown extension "'+u+'".')}}r.setExtensions(h),r.setPlugins(l),r.parse(d,f)}});var B={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};d.prototype._markDefs=function(){for(var a=this.parser,b=this.parser.json.nodes||[],c=0,d=b.length;d>c;c++){var e=b[c];e.extensions&&e.extensions[this.name]&&void 0!==e.extensions[this.name].light&&a._addNodeRef(this.cache,e.extensions[this.name].light)}},d.prototype._loadLight=function(a){var b=this.parser,c="light:"+a,d=b.cache.get(c);if(d)return d;var e,f=b.json,g=f.extensions&&f.extensions[this.name]||{},h=g.lights||[],i=h[a],j=new THREE.Color(16777215);void 0!==i.color&&j.fromArray(i.color);var k=void 0!==i.range?i.range:0;switch(i.type){case"directional":e=new THREE.DirectionalLight(j),e.target.position.set(0,0,-1),e.add(e.target);break;case"point":e=new THREE.PointLight(j),e.distance=k;break;case"spot":e=new THREE.SpotLight(j),e.distance=k,i.spot=i.spot||{},i.spot.innerConeAngle=void 0!==i.spot.innerConeAngle?i.spot.innerConeAngle:0,i.spot.outerConeAngle=void 0!==i.spot.outerConeAngle?i.spot.outerConeAngle:Math.PI/4,e.angle=i.spot.outerConeAngle,e.penumbra=1-i.spot.innerConeAngle/i.spot.outerConeAngle,e.target.position.set(0,0,-1),e.add(e.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+i.type+'".')}return e.position.set(0,0,0),e.decay=2,void 0!==i.intensity&&(e.intensity=i.intensity),e.name=b.createUniqueName(i.name||"light_"+a),d=Promise.resolve(e),b.cache.add(c,d),d},d.prototype.createNodeAttachment=function(a){var b=this,c=this.parser,d=c.json,e=d.nodes[a],f=e.extensions&&e.extensions[this.name]||{},g=f.light;return void 0===g?null:this._loadLight(g).then(function(a){return c._getNodeRef(b.cache,g,a)})},e.prototype.getMaterialType=function(){return THREE.MeshBasicMaterial},e.prototype.extendParams=function(a,b,c){var d=[];a.color=new THREE.Color(1,1,1),a.opacity=1;var e=b.pbrMetallicRoughness;if(e){if(Array.isArray(e.baseColorFactor)){var f=e.baseColorFactor;a.color.fromArray(f),a.opacity=f[3]}void 0!==e.baseColorTexture&&d.push(c.assignTexture(a,"map",e.baseColorTexture))}return Promise.all(d)},f.prototype.getMaterialType=function(a){var b=this.parser,c=b.json.materials[a];return c.extensions&&c.extensions[this.name]?THREE.MeshPhysicalMaterial:null},f.prototype.extendMaterialParams=function(a,b){var c=this.parser,d=c.json.materials[a];if(!d.extensions||!d.extensions[this.name])return Promise.resolve();var e=[],f=d.extensions[this.name];if(void 0!==f.clearcoatFactor&&(b.clearcoat=f.clearcoatFactor),void 0!==f.clearcoatTexture&&e.push(c.assignTexture(b,"clearcoatMap",f.clearcoatTexture)),void 0!==f.clearcoatRoughnessFactor&&(b.clearcoatRoughness=f.clearcoatRoughnessFactor),void 0!==f.clearcoatRoughnessTexture&&e.push(c.assignTexture(b,"clearcoatRoughnessMap",f.clearcoatRoughnessTexture)),void 0!==f.clearcoatNormalTexture&&(e.push(c.assignTexture(b,"clearcoatNormalMap",f.clearcoatNormalTexture)),void 0!==f.clearcoatNormalTexture.scale)){var g=f.clearcoatNormalTexture.scale;b.clearcoatNormalScale=new THREE.Vector2(g,g)}return Promise.all(e)},g.prototype.getMaterialType=function(a){var b=this.parser,c=b.json.materials[a];return c.extensions&&c.extensions[this.name]?THREE.MeshPhysicalMaterial:null},g.prototype.extendMaterialParams=function(a,b){var c=this.parser,d=c.json.materials[a];if(!d.extensions||!d.extensions[this.name])return Promise.resolve();var e=[],f=d.extensions[this.name];return void 0!==f.transmissionFactor&&(b.transmission=f.transmissionFactor),void 0!==f.transmissionTexture&&e.push(c.assignTexture(b,"transmissionMap",f.transmissionTexture)),Promise.all(e)},h.prototype.loadTexture=function(a){var b=this.parser,c=b.json,d=c.textures[a];if(!d.extensions||!d.extensions[this.name])return null;var e=d.extensions[this.name],f=c.images[e.source],g=b.options.ktx2Loader;if(!g)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return b.loadTextureImage(a,f,g)};var C="glTF",D=12,E={JSON:1313821514,BIN:5130562};j.prototype.decodePrimitive=function(a,b){var c=this.json,d=this.dracoLoader,e=a.extensions[this.name].bufferView,f=a.extensions[this.name].attributes,g={},h={},i={};for(var j in f){var k=K[j]||j.toLowerCase();g[k]=f[j]}for(j in a.attributes){var k=K[j]||j.toLowerCase();if(void 0!==f[j]){var l=c.accessors[a.attributes[j]],m=G[l.componentType];i[k]=m,h[k]=l.normalized===!0}}return b.getDependency("bufferView",e).then(function(a){return new Promise(function(b){d.decodeDracoFile(a,function(a){for(var c in a.attributes){var d=a.attributes[c],e=h[c];void 0!==e&&(d.normalized=e)}b(a)},g,i)})})},k.prototype.extendTexture=function(a,b){return a=a.clone(),void 0!==b.offset&&a.offset.fromArray(b.offset),void 0!==b.rotation&&(a.rotation=b.rotation),void 0!==b.scale&&a.repeat.fromArray(b.scale),void 0!==b.texCoord&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),a.needsUpdate=!0,a},l.prototype=Object.create(THREE.MeshStandardMaterial.prototype),l.prototype.constructor=l,l.prototype.copy=function(a){return THREE.MeshStandardMaterial.prototype.copy.call(this,a),this.specularMap=a.specularMap,this.specular.copy(a.specular),this.glossinessMap=a.glossinessMap,this.glossiness=a.glossiness,delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this},o.prototype=Object.create(THREE.Interpolant.prototype),o.prototype.constructor=o,o.prototype.copySampleValue_=function(a){for(var b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d*3+d,f=0;f!==d;f++)b[f]=c[e+f];return b},o.prototype.beforeStart_=o.prototype.copySampleValue_,o.prototype.afterEnd_=o.prototype.copySampleValue_,o.prototype.interpolate_=function(a,b,c,d){for(var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=2*g,i=3*g,j=d-b,k=(c-b)/j,l=k*k,m=l*k,n=a*i,o=n-i,p=-2*m+3*l,q=m-l,r=1-p,s=q-l+k,t=0;t!==g;t++){var u=f[o+t+g],v=f[o+t+h]*j,w=f[n+t+g],x=f[n+t]*j;e[t]=r*u+s*v+p*w+q*x}return e};var F={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},G={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},H={9728:THREE.NearestFilter,9729:THREE.LinearFilter,9984:THREE.NearestMipmapNearestFilter,9985:THREE.LinearMipmapNearestFilter,9986:THREE.NearestMipmapLinearFilter,9987:THREE.LinearMipmapLinearFilter},I={33071:THREE.ClampToEdgeWrapping,33648:THREE.MirroredRepeatWrapping,10497:THREE.RepeatWrapping},J={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},K={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},L={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},M={CUBICSPLINE:void 0,LINEAR:THREE.InterpolateLinear,STEP:THREE.InterpolateDiscrete},N={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};return x.prototype.setExtensions=function(a){this.extensions=a},x.prototype.setPlugins=function(a){this.plugins=a},x.prototype.parse=function(a,b){var c=this,d=this.json,e=this.extensions;this.cache.removeAll(),this._invokeAll(function(a){return a._markDefs&&a._markDefs()}),Promise.all([this.getDependencies("scene"),this.getDependencies("animation"),this.getDependencies("camera")]).then(function(b){var f={scene:b[0][d.scene||0],scenes:b[0],animations:b[1],cameras:b[2],asset:d.asset,parser:c,userData:{}};r(e,f,d),s(f,d),a(f)})["catch"](b)},x.prototype._markDefs=function(){for(var a=this.json.nodes||[],b=this.json.skins||[],c=this.json.meshes||[],d=0,e=b.length;e>d;d++)for(var f=b[d].joints,g=0,h=f.length;h>g;g++)a[f[g]].isBone=!0;for(var i=0,j=a.length;j>i;i++){var k=a[i];void 0!==k.mesh&&(this._addNodeRef(this.meshCache,k.mesh),void 0!==k.skin&&(c[k.mesh].isSkinnedMesh=!0)),void 0!==k.camera&&this._addNodeRef(this.cameraCache,k.camera)}},x.prototype._addNodeRef=function(a,b){void 0!==b&&(void 0===a.refs[b]&&(a.refs[b]=a.uses[b]=0),a.refs[b]++)},x.prototype._getNodeRef=function(a,b,c){if(a.refs[b]<=1)return c;var d=c.clone();return d.name+="_instance_"+a.uses[b]++,d},x.prototype._invokeOne=function(a){var b=Object.values(this.plugins);b.push(this);for(var c=0;c<b.length;c++){var d=a(b[c]);if(d)return d}},x.prototype._invokeAll=function(a){var b=Object.values(this.plugins);b.unshift(this);for(var c=[],d=0;d<b.length;d++){var e=a(b[d]);e&&c.push(e)}return c},x.prototype.getDependency=function(a,b){var c=a+":"+b,d=this.cache.get(c);if(!d){switch(a){case"scene":d=this.loadScene(b);break;case"node":d=this.loadNode(b);break;case"mesh":d=this._invokeOne(function(a){return a.loadMesh&&a.loadMesh(b)});break;case"accessor":d=this.loadAccessor(b);break;case"bufferView":d=this._invokeOne(function(a){return a.loadBufferView&&a.loadBufferView(b)});break;case"buffer":d=this.loadBuffer(b);break;case"material":d=this._invokeOne(function(a){return a.loadMaterial&&a.loadMaterial(b)});break;case"texture":d=this._invokeOne(function(a){return a.loadTexture&&a.loadTexture(b)});break;case"skin":d=this.loadSkin(b);break;case"animation":d=this.loadAnimation(b);break;case"camera":d=this.loadCamera(b);break;default:throw new Error("Unknown type: "+a)}this.cache.add(c,d)}return d},x.prototype.getDependencies=function(a){var b=this.cache.get(a);if(!b){var c=this,d=this.json[a+("mesh"===a?"es":"s")]||[];b=Promise.all(d.map(function(b,d){return c.getDependency(a,d)})),this.cache.add(a,b)}return b},x.prototype.loadBuffer=function(a){var b=this.json.buffers[a],c=this.fileLoader;if(b.type&&"arraybuffer"!==b.type)throw new Error("THREE.GLTFLoader: "+b.type+" buffer type is not supported.");if(void 0===b.uri&&0===a)return Promise.resolve(this.extensions[B.KHR_BINARY_GLTF].body);var d=this.options;return new Promise(function(a,e){c.load(p(b.uri,d.path),a,void 0,function(){e(new Error('THREE.GLTFLoader: Failed to load buffer "'+b.uri+'".'))})})},x.prototype.loadBufferView=function(a){var b=this.json.bufferViews[a];return this.getDependency("buffer",b.buffer).then(function(a){var c=b.byteLength||0,d=b.byteOffset||0;return a.slice(d,d+c)})},x.prototype.loadAccessor=function(a){var b=this,c=this.json,d=this.json.accessors[a];if(void 0===d.bufferView&&void 0===d.sparse)return Promise.resolve(null);var e=[];return void 0!==d.bufferView?e.push(this.getDependency("bufferView",d.bufferView)):e.push(null),void 0!==d.sparse&&(e.push(this.getDependency("bufferView",d.sparse.indices.bufferView)),e.push(this.getDependency("bufferView",d.sparse.values.bufferView))),Promise.all(e).then(function(a){var e,f,g=a[0],h=J[d.type],i=G[d.componentType],j=i.BYTES_PER_ELEMENT,k=j*h,l=d.byteOffset||0,m=void 0!==d.bufferView?c.bufferViews[d.bufferView].byteStride:void 0,n=d.normalized===!0;if(m&&m!==k){var o=Math.floor(l/m),p="InterleavedBuffer:"+d.bufferView+":"+d.componentType+":"+o+":"+d.count,q=b.cache.get(p);q||(e=new i(g,o*m,d.count*m/j),q=new THREE.InterleavedBuffer(e,m/j),b.cache.add(p,q)),f=new THREE.InterleavedBufferAttribute(q,h,l%m/j,n)}else e=null===g?new i(d.count*h):new i(g,l,d.count*h),f=new THREE.BufferAttribute(e,h,n);if(void 0!==d.sparse){var r=J.SCALAR,s=G[d.sparse.indices.componentType],t=d.sparse.indices.byteOffset||0,u=d.sparse.values.byteOffset||0,v=new s(a[1],t,d.sparse.count*r),w=new i(a[2],u,d.sparse.count*h);null!==g&&(f=new THREE.BufferAttribute(f.array.slice(),f.itemSize,f.normalized));for(var x=0,y=v.length;y>x;x++){var z=v[x];if(f.setX(z,w[x*h]),h>=2&&f.setY(z,w[x*h+1]),h>=3&&f.setZ(z,w[x*h+2]),h>=4&&f.setW(z,w[x*h+3]),h>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return f})},x.prototype.loadTexture=function(a){var b,c=this,d=this.json,e=this.options,f=d.textures[a],g=f.extensions||{};b=g[B.MSFT_TEXTURE_DDS]?d.images[g[B.MSFT_TEXTURE_DDS].source]:d.images[f.source];var h;return b.uri&&(h=e.manager.getHandler(b.uri)),h||(h=g[B.MSFT_TEXTURE_DDS]?c.extensions[B.MSFT_TEXTURE_DDS].ddsLoader:this.textureLoader),this.loadTextureImage(a,b,h)},x.prototype.loadTextureImage=function(a,b,c){var d=this,e=this.json,f=this.options,g=e.textures[a],h=self.URL||self.webkitURL,i=b.uri,j=!1,k=!0;return"image/jpeg"===b.mimeType&&(k=!1),void 0!==b.bufferView&&(i=d.getDependency("bufferView",b.bufferView).then(function(a){if("image/png"===b.mimeType){var c=new DataView(a,25,1).getUint8(0,!1);k=6===c||4===c||3===c}j=!0;var d=new Blob([a],{type:b.mimeType});return i=h.createObjectURL(d)})),Promise.resolve(i).then(function(a){return new Promise(function(b,d){var e=b;c.isImageBitmapLoader===!0&&(e=function(a){b(new THREE.CanvasTexture(a))}),c.load(p(a,f.path),e,void 0,d)})}).then(function(b){j===!0&&h.revokeObjectURL(i),b.flipY=!1,g.name&&(b.name=g.name),k||(b.format=THREE.RGBFormat);var c=e.samplers||{},f=c[g.sampler]||{};return b.magFilter=H[f.magFilter]||THREE.LinearFilter,b.minFilter=H[f.minFilter]||THREE.LinearMipmapLinearFilter,b.wrapS=I[f.wrapS]||THREE.RepeatWrapping,b.wrapT=I[f.wrapT]||THREE.RepeatWrapping,d.associations.set(b,{type:"textures",index:a}),b})},x.prototype.assignTexture=function(a,b,c){var d=this;return this.getDependency("texture",c.index).then(function(e){if(void 0===c.texCoord||0==c.texCoord||"aoMap"===b&&1==c.texCoord||console.warn("THREE.GLTFLoader: Custom UV set "+c.texCoord+" for texture "+b+" not yet supported."),d.extensions[B.KHR_TEXTURE_TRANSFORM]){var f=void 0!==c.extensions?c.extensions[B.KHR_TEXTURE_TRANSFORM]:void 0;if(f){var g=d.associations.get(e);e=d.extensions[B.KHR_TEXTURE_TRANSFORM].extendTexture(e,f),d.associations.set(e,g)}}a[b]=e})},x.prototype.assignFinalMaterial=function(a){var b=a.geometry,c=a.material,d=void 0!==b.attributes.tangent,e=void 0!==b.attributes.color,f=void 0===b.attributes.normal,g=a.isSkinnedMesh===!0,h=Object.keys(b.morphAttributes).length>0,i=h&&void 0!==b.morphAttributes.normal;if(a.isPoints){var j="PointsMaterial:"+c.uuid,k=this.cache.get(j);k||(k=new THREE.PointsMaterial,THREE.Material.prototype.copy.call(k,c),k.color.copy(c.color),k.map=c.map,k.sizeAttenuation=!1,this.cache.add(j,k)),c=k}else if(a.isLine){var j="LineBasicMaterial:"+c.uuid,l=this.cache.get(j);l||(l=new THREE.LineBasicMaterial,THREE.Material.prototype.copy.call(l,c),l.color.copy(c.color),this.cache.add(j,l)),c=l}if(d||e||f||g||h){var j="ClonedMaterial:"+c.uuid+":";c.isGLTFSpecularGlossinessMaterial&&(j+="specular-glossiness:"),g&&(j+="skinning:"),d&&(j+="vertex-tangents:"),e&&(j+="vertex-colors:"),f&&(j+="flat-shading:"),h&&(j+="morph-targets:"),i&&(j+="morph-normals:");var m=this.cache.get(j);m||(m=c.clone(),g&&(m.skinning=!0),d&&(m.vertexTangents=!0),e&&(m.vertexColors=!0),f&&(m.flatShading=!0),h&&(m.morphTargets=!0),i&&(m.morphNormals=!0),this.cache.add(j,m),this.associations.set(m,this.associations.get(c))),c=m}c.aoMap&&void 0===b.attributes.uv2&&void 0!==b.attributes.uv&&b.setAttribute("uv2",b.attributes.uv),c.normalScale&&!d&&(c.normalScale.y=-c.normalScale.y),c.clearcoatNormalScale&&!d&&(c.clearcoatNormalScale.y=-c.clearcoatNormalScale.y),a.material=c},x.prototype.getMaterialType=function(){return THREE.MeshStandardMaterial},x.prototype.loadMaterial=function(a){var b,c=this,d=this.json,e=this.extensions,f=d.materials[a],g={},h=f.extensions||{},i=[];if(h[B.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var j=e[B.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];b=j.getMaterialType(),i.push(j.extendParams(g,f,c))}else if(h[B.KHR_MATERIALS_UNLIT]){var k=e[B.KHR_MATERIALS_UNLIT];b=k.getMaterialType(),i.push(k.extendParams(g,f,c))}else{var m=f.pbrMetallicRoughness||{};if(g.color=new THREE.Color(1,1,1),g.opacity=1,Array.isArray(m.baseColorFactor)){var n=m.baseColorFactor;g.color.fromArray(n),g.opacity=n[3]}void 0!==m.baseColorTexture&&i.push(c.assignTexture(g,"map",m.baseColorTexture)),g.metalness=void 0!==m.metallicFactor?m.metallicFactor:1,g.roughness=void 0!==m.roughnessFactor?m.roughnessFactor:1,void 0!==m.metallicRoughnessTexture&&(i.push(c.assignTexture(g,"metalnessMap",m.metallicRoughnessTexture)),i.push(c.assignTexture(g,"roughnessMap",m.metallicRoughnessTexture))),b=this._invokeOne(function(b){return b.getMaterialType&&b.getMaterialType(a)}),i.push(Promise.all(this._invokeAll(function(b){return b.extendMaterialParams&&b.extendMaterialParams(a,g)})))}f.doubleSided===!0&&(g.side=THREE.DoubleSide);var o=f.alphaMode||N.OPAQUE;return o===N.BLEND?(g.transparent=!0,g.depthWrite=!1):(g.transparent=!1,o===N.MASK&&(g.alphaTest=void 0!==f.alphaCutoff?f.alphaCutoff:.5)),void 0!==f.normalTexture&&b!==THREE.MeshBasicMaterial&&(i.push(c.assignTexture(g,"normalMap",f.normalTexture)),g.normalScale=new THREE.Vector2(1,1),void 0!==f.normalTexture.scale&&g.normalScale.set(f.normalTexture.scale,f.normalTexture.scale)),void 0!==f.occlusionTexture&&b!==THREE.MeshBasicMaterial&&(i.push(c.assignTexture(g,"aoMap",f.occlusionTexture)),void 0!==f.occlusionTexture.strength&&(g.aoMapIntensity=f.occlusionTexture.strength)),void 0!==f.emissiveFactor&&b!==THREE.MeshBasicMaterial&&(g.emissive=(new THREE.Color).fromArray(f.emissiveFactor)),void 0!==f.emissiveTexture&&b!==THREE.MeshBasicMaterial&&i.push(c.assignTexture(g,"emissiveMap",f.emissiveTexture)),
Promise.all(i).then(function(){var d;return d=b===l?e[B.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(g):new b(g),f.name&&(d.name=f.name),d.map&&(d.map.encoding=THREE.sRGBEncoding),d.emissiveMap&&(d.emissiveMap.encoding=THREE.sRGBEncoding),s(d,f),c.associations.set(d,{type:"materials",index:a}),f.extensions&&r(e,d,f),d})},x.prototype.createUniqueName=function(a){for(var b=THREE.PropertyBinding.sanitizeNodeName(a||""),c=1;this.nodeNamesUsed[b];++c)b=a+"_"+c;return this.nodeNamesUsed[b]=!0,b},x.prototype.loadGeometries=function(a){function b(a){return d[B.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,c).then(function(b){return z(b,a,c)})}for(var c=this,d=this.extensions,e=this.primitiveCache,f=[],g=0,h=a.length;h>g;g++){var i=a[g],j=v(i),k=e[j];if(k)f.push(k.promise);else{var l;l=i.extensions&&i.extensions[B.KHR_DRACO_MESH_COMPRESSION]?b(i):z(new THREE.BufferGeometry,i,c),e[j]={primitive:i,promise:l},f.push(l)}}return Promise.all(f)},x.prototype.loadMesh=function(a){for(var b=this,c=this.json,d=c.meshes[a],e=d.primitives,f=[],g=0,h=e.length;h>g;g++){var i=void 0===e[g].material?q(this.cache):this.getDependency("material",e[g].material);f.push(i)}return f.push(b.loadGeometries(e)),Promise.all(f).then(function(c){for(var f=c.slice(0,c.length-1),g=c[c.length-1],h=[],i=0,j=g.length;j>i;i++){var k,l=g[i],m=e[i],n=f[i];if(m.mode===F.TRIANGLES||m.mode===F.TRIANGLE_STRIP||m.mode===F.TRIANGLE_FAN||void 0===m.mode)k=d.isSkinnedMesh===!0?new THREE.SkinnedMesh(l,n):new THREE.Mesh(l,n),k.isSkinnedMesh!==!0||k.geometry.attributes.skinWeight.normalized||k.normalizeSkinWeights(),m.mode===F.TRIANGLE_STRIP?k.geometry=A(k.geometry,THREE.TriangleStripDrawMode):m.mode===F.TRIANGLE_FAN&&(k.geometry=A(k.geometry,THREE.TriangleFanDrawMode));else if(m.mode===F.LINES)k=new THREE.LineSegments(l,n);else if(m.mode===F.LINE_STRIP)k=new THREE.Line(l,n);else if(m.mode===F.LINE_LOOP)k=new THREE.LineLoop(l,n);else{if(m.mode!==F.POINTS)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+m.mode);k=new THREE.Points(l,n)}Object.keys(k.geometry.morphAttributes).length>0&&u(k,d),k.name=b.createUniqueName(d.name||"mesh_"+a),g.length>1&&(k.name+="_"+i),s(k,d),b.assignFinalMaterial(k),h.push(k)}if(1===h.length)return h[0];for(var o=new THREE.Group,i=0,j=h.length;j>i;i++)o.add(h[i]);return o})},x.prototype.loadCamera=function(a){var b,c=this.json.cameras[a],d=c[c.type];return d?("perspective"===c.type?b=new THREE.PerspectiveCamera(THREE.MathUtils.radToDeg(d.yfov),d.aspectRatio||1,d.znear||1,d.zfar||2e6):"orthographic"===c.type&&(b=new THREE.OrthographicCamera(-d.xmag,d.xmag,d.ymag,-d.ymag,d.znear,d.zfar)),c.name&&(b.name=this.createUniqueName(c.name)),s(b,c),Promise.resolve(b)):void console.warn("THREE.GLTFLoader: Missing camera parameters.")},x.prototype.loadSkin=function(a){var b=this.json.skins[a],c={joints:b.joints};return void 0===b.inverseBindMatrices?Promise.resolve(c):this.getDependency("accessor",b.inverseBindMatrices).then(function(a){return c.inverseBindMatrices=a,c})},x.prototype.loadAnimation=function(a){for(var b=this.json,c=b.animations[a],d=[],e=[],f=[],g=[],h=[],i=0,j=c.channels.length;j>i;i++){var k=c.channels[i],l=c.samplers[k.sampler],m=k.target,n=void 0!==m.node?m.node:m.id,p=void 0!==c.parameters?c.parameters[l.input]:l.input,q=void 0!==c.parameters?c.parameters[l.output]:l.output;d.push(this.getDependency("node",n)),e.push(this.getDependency("accessor",p)),f.push(this.getDependency("accessor",q)),g.push(l),h.push(m)}return Promise.all([Promise.all(d),Promise.all(e),Promise.all(f),Promise.all(g),Promise.all(h)]).then(function(b){for(var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=[],j=0,k=d.length;k>j;j++){var l=d[j],m=e[j],n=f[j],p=g[j],q=h[j];if(void 0!==l){l.updateMatrix(),l.matrixAutoUpdate=!0;var r;switch(L[q.path]){case L.weights:r=THREE.NumberKeyframeTrack;break;case L.rotation:r=THREE.QuaternionKeyframeTrack;break;case L.position:case L.scale:default:r=THREE.VectorKeyframeTrack}var s=l.name?l.name:l.uuid,t=void 0!==p.interpolation?M[p.interpolation]:THREE.InterpolateLinear,u=[];L[q.path]===L.weights?l.traverse(function(a){a.isMesh===!0&&a.morphTargetInfluences&&u.push(a.name?a.name:a.uuid)}):u.push(s);var v=n.array;if(n.normalized){var w;if(v.constructor===Int8Array)w=1/127;else if(v.constructor===Uint8Array)w=1/255;else if(v.constructor==Int16Array)w=1/32767;else{if(v.constructor!==Uint16Array)throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");w=1/65535}for(var x=new Float32Array(v.length),y=0,z=v.length;z>y;y++)x[y]=v[y]*w;v=x}for(var y=0,z=u.length;z>y;y++){var A=new r(u[y]+"."+L[q.path],m.array,v,t);"CUBICSPLINE"===p.interpolation&&(A.createInterpolant=function(a){return new o(this.times,this.values,this.getValueSize()/3,a)},A.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),i.push(A)}}}var B=c.name?c.name:"animation_"+a;return new THREE.AnimationClip(B,void 0,i)})},x.prototype.loadNode=function(a){var b=this.json,c=this.extensions,d=this,e=b.nodes[a],f=e.name?d.createUniqueName(e.name):"";return function(){var b=[];return void 0!==e.mesh&&b.push(d.getDependency("mesh",e.mesh).then(function(a){var b=d._getNodeRef(d.meshCache,e.mesh,a);return void 0!==e.weights&&b.traverse(function(a){if(a.isMesh)for(var b=0,c=e.weights.length;c>b;b++)a.morphTargetInfluences[b]=e.weights[b]}),b})),void 0!==e.camera&&b.push(d.getDependency("camera",e.camera).then(function(a){return d._getNodeRef(d.cameraCache,e.camera,a)})),d._invokeAll(function(b){return b.createNodeAttachment&&b.createNodeAttachment(a)}).forEach(function(a){b.push(a)}),Promise.all(b)}().then(function(b){var g;if(g=e.isBone===!0?new THREE.Bone:b.length>1?new THREE.Group:1===b.length?b[0]:new THREE.Object3D,g!==b[0])for(var h=0,i=b.length;i>h;h++)g.add(b[h]);if(e.name&&(g.userData.name=e.name,g.name=f),s(g,e),e.extensions&&r(c,g,e),void 0!==e.matrix){var j=new THREE.Matrix4;j.fromArray(e.matrix),g.applyMatrix4(j)}else void 0!==e.translation&&g.position.fromArray(e.translation),void 0!==e.rotation&&g.quaternion.fromArray(e.rotation),void 0!==e.scale&&g.scale.fromArray(e.scale);return d.associations.set(g,{type:"nodes",index:a}),g})},x.prototype.loadScene=function(){function a(b,c,d,e){var f=d.nodes[b];return e.getDependency("node",b).then(function(a){if(void 0===f.skin)return a;var b;return e.getDependency("skin",f.skin).then(function(a){b=a;for(var c=[],d=0,f=b.joints.length;f>d;d++)c.push(e.getDependency("node",b.joints[d]));return Promise.all(c)}).then(function(c){return a.traverse(function(a){if(a.isMesh){for(var d=[],e=[],f=0,g=c.length;g>f;f++){var h=c[f];if(h){d.push(h);var i=new THREE.Matrix4;void 0!==b.inverseBindMatrices&&i.fromArray(b.inverseBindMatrices.array,16*f),e.push(i)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',b.joints[f])}a.bind(new THREE.Skeleton(d,e),a.matrixWorld)}}),a})}).then(function(b){c.add(b);var g=[];if(f.children)for(var h=f.children,i=0,j=h.length;j>i;i++){var k=h[i];g.push(a(k,b,d,e))}return Promise.all(g)})}return function(b){var c=this.json,d=this.extensions,e=this.json.scenes[b],f=this,g=new THREE.Group;e.name&&(g.name=f.createUniqueName(e.name)),s(g,e),e.extensions&&r(d,g,e);for(var h=e.nodes||[],i=[],j=0,k=h.length;k>j;j++)i.push(a(h[j],g,c,f));return Promise.all(i).then(function(){return g})}}(),a}();